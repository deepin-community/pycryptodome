Source: pycryptodome
Maintainer: Debian Python Team <team+python@tracker.debian.org>
Uploaders: Christopher Hoskin <mans0954@debian.org>
Section: python
Priority: optional
Build-Depends: debhelper-compat (= 13),
               dh-python,
               python3-all-dev,
               python3-setuptools,
               python3-sphinx <!nodoc>,
               python3-sphinx-rtd-theme <!nodoc>,
Standards-Version: 4.6.0
Rules-Requires-Root: no
Homepage: https://www.pycryptodome.org
Vcs-Git: https://salsa.debian.org/python-team/packages/pycryptodome.git
Vcs-Browser: https://salsa.debian.org/python-team/packages/pycryptodome
Testsuite: autopkgtest-pkg-python

Package: python3-pycryptodome
Architecture: any
Depends: ${misc:Depends}, ${python3:Depends}, ${shlibs:Depends}
Description: cryptographic Python library (Python 3)
 PyCryptodome is a self-contained Python package of low-level
 cryptographic primitives.
 .
 PyCryptodome is a fork of PyCrypto. It brings several enhancements
 with respect to the last official version of PyCrypto (2.6.1),
 for instance:
 .
   * Authenticated encryption modes (GCM, CCM, EAX, SIV, OCB)
   * Accelerated AES on Intel platforms via AES-NI
   * Elliptic curves cryptography (NIST P-256, P-384 and P-521 curves only)
   * Better and more compact API (`nonce` and `iv` attributes for ciphers,
     automatic generation of random nonces and IVs, simplified CTR cipher mode,
     and more)
   * SHA-3 (including SHAKE and cSHAKE XOFs), truncated SHA-512 and BLAKE2
     hash algorithms
   * Salsa20 and ChaCha20/XChaCha20 stream ciphers
   * Poly1305 MAC
   * ChaCha20-Poly1305 and XChaCha20-Poly1305 authenticated ciphers
   * scrypt, bcrypt and HKDF derivation functions
   * Deterministic (EC)DSA
   * Password-protected PKCS#8 key containers
   * Shamir's Secret Sharing scheme
   * Random numbers get sourced directly from the OS (and not from a CSPRNG
     in userspace)
   * Cleaner RSA and DSA key generation (largely based on FIPS 186-4)
   * Major clean ups and simplification of the code base
 .
 PyCryptodome is not a wrapper to a separate C library like *OpenSSL*.
 To the largest possible extent, algorithms are implemented in pure Python.
 Only the pieces that are extremely critical to performance (e.g. block ciphers)
 are implemented as C extensions.
 .
 This is the Python 3 version of the package.

Package: python-pycryptodome-doc
Architecture: all
Section: doc
Depends: ${misc:Depends}, ${sphinxdoc:Depends}, python3-sphinx-rtd-theme
Description: cryptographic Python library (documentation)
 PyCryptodome is a self-contained Python package of low-level
 cryptographic primitives.
 .
 PyCryptodome is a fork of PyCrypto. It brings several enhancements
 with respect to the last official version of PyCrypto (2.6.1),
 for instance:
 .
   * Authenticated encryption modes (GCM, CCM, EAX, SIV, OCB)
   * Accelerated AES on Intel platforms via AES-NI
   * Elliptic curves cryptography (NIST P-256, P-384 and P-521 curves only)
   * Better and more compact API (`nonce` and `iv` attributes for ciphers,
     automatic generation of random nonces and IVs, simplified CTR cipher mode,
     and more)
   * SHA-3 (including SHAKE and cSHAKE XOFs), truncated SHA-512 and BLAKE2
     hash algorithms
   * Salsa20 and ChaCha20/XChaCha20 stream ciphers
   * Poly1305 MAC
   * ChaCha20-Poly1305 and XChaCha20-Poly1305 authenticated ciphers
   * scrypt, bcrypt and HKDF derivation functions
   * Deterministic (EC)DSA
   * Password-protected PKCS#8 key containers
   * Shamir's Secret Sharing scheme
   * Random numbers get sourced directly from the OS (and not from a CSPRNG
     in userspace)
   * Cleaner RSA and DSA key generation (largely based on FIPS 186-4)
   * Major clean ups and simplification of the code base
 .
 PyCryptodome is not a wrapper to a separate C library like *OpenSSL*.
 To the largest possible extent, algorithms are implemented in pure Python.
 Only the pieces that are extremely critical to performance (e.g. block ciphers)
 are implemented as C extensions.
 .
 This is the documentation package.
